Notes on environments in the Interpreter
========================================

Problems:

1. We need lexical scope, of course, so we need functions to be represented as
closures which carry an environment of their free variables around.

2. We can't do lambda lifting instead, which a compiler would do, because it
would alter what the program prints as.

3. We need to do this closure-building at parse time, by keeping an environment
whilst converting from the OCaml tree, and inserting bindings into the Fun and
Function nodes.

4. When we evaluate, we then have to use these environments on entry to these
function bodies, instead of the current environment.

Questions?

A. Why does this have to happen in two stages, once at parsing and once when
evaluating? For efficiency, presumably.

B. Are we sure nothing can get computed twice when we make these environments?
References?


Explicit and Implicit Let Expressions and Environments when Evaluating
======================================================================

At the moment, we are having trouble getting a clean pattern match, because we
might want to evaluate, for example:

(let x = 1 in let y = 2 in (fun p -> p + x + y)) 3

This is not of the form App (_, _) but App (Let (Let (_, _), _), _) so is hard
to pattern-match.

The solution to this is to remove a LET to the environment as soon as its RHS in
a value. Such implicit lets are still printed, but they exist in a different
part of the data structure, so pattern matching remains simple.

So we have

type te =
  Int of int
| Let of (bool * binding list * t)
| .....

and t =
  {te : te;
   implicit_lets : binding list}

A Let whose RHS is a value is moved to implicit_lets. This can be done by a
rewritten collect_lets procedure. So, when it is time to do the next step of
evaluation, the outermost LET in the redex in the main data structure is always
a non-value RHS. Thus, if the App above is the redex, it will not have LETs
around it.

Update 30/5/2016: Actually, just make them all implicit, and check for RHS value before the pattern match?